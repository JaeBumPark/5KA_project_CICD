pipeline {
  agent any
  tools {
    maven 'my_maven'
  }

  parameters {
    string(name: 'gitlabName', defaultValue: 'root')
    string(name: 'gitlabEmail', defaultValue: 'root@5ka.io')
    string(name: 'gitlabWebaddress', defaultValue: '')
    string(name: 'githelmaddress', defaultValue: '', description: 'git helm repository') //defaultvalue 변경 예정
    string(name: 'githelmshortddress', defaultValue: '', description: 'git helm repository')
    string(name: 'gitlabCredential', defaultValue: 'git_cre', description: 'git credentials')
    string(name: 'ecrrepositoryCredential', defaultValue: 'nexus_cre')
    string(name: 'ecrrepository', defaultValue: 'https://963897741994.dkr.ecr.ap-northeast-2.amazonaws.com')
    string(name: 'namespace', defaultValue: '')
    
  }
  stages {
    stage('Checkout Gitlab') {
      steps {
        checkout([$class: 'GitSCM', branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[credentialsId:  "${params.gitlabCredential}", url: "${params.gitlabWebaddress}"]]])
        echo "gitlabName: ${params.gitlabName}"
        echo "gitlabEmail: ${params.gitlabEmail}"
        echo "gitlabWebaddress: ${params.gitlabWebaddress}"
        echo "githelmaddress: ${params.githelmaddress}"
        echo "githelmshortddress: ${params.githelmshortddress}"
        echo "gitlabCredential: ${params.gitlabCredential}"
        echo "ecrrepositoryCredential: ${params.ecrrepositoryCredential}"
        echo "ecrrepository: ${params.ecrrepository}"
        echo "namespace: ${params.namespace}"
      }
    }
    stage('Kaniko pod deploy') {
      steps {
        podTemplate(yaml: '''
          apiVersion: v1
          kind: Pod
          spec:
            containers:
            - name: maven
              image: maven:3-openjdk-8
              command: ['sleep']
              args: ['infinity']
            - name: kaniko
              image: gcr.io/kaniko-project/executor:debug
              command: ['sleep']
              args: ['infinity']
              volumeMounts:
              - name: registry-credentials
                mountPath: /kaniko/.docker
              - name: aws-credentials
                mountPath: /root/.aws/credentials
                subPath: credentials
            volumes:
            - name: registry-credentials
              secret:
                secretName: regcred
                items: 
                - key: .dockerconfigjson
                  path: config.json
            - name: aws-credentials
              secret:
                secretName: aws-credentials
        ''') {
          node(POD_LABEL) {

            container('kaniko') {
              script {
                stage('Clone Repository') {
                  checkout scm
                }
              }
            }
            container('maven'){
              script{
                stage('Maven Build') {
                sh 'mvn clean install'
                 }
              }        
             } 
            
  
                stage('Push Docker image') {
                  sh "echo {$env.WORKSPACE}"
                  sh "executor --dockerfile=Dockerfile \
                    --context=dir://${env.WORKSPACE} \
                    --cache=true \   
                    --cache-repo=nexus.ihp001.dev/kaniko-test/cache \
                    --destination=nexus.ihp001.dev/kaniko-test:${env.BUILD_NUMBER} \
                    --destination=nexus.ihp001.dev/kaniko-test:latest"
                    }
                  }
                }
              }
            }
          }
        }
      

    stage('5ka Manifest Repository change') {
        steps {
            git credentialsId: "${params.gitlabCredential}",
                url: "${params.githelmaddress}",
                branch: 'main'
        }
        post {
                failure {
                echo '5ka Repository change failure !'
                }
                success {
                echo '5ka Repository change success !'
                }
        }
    }

    stage('manifest Update') {
        steps {
            withCredentials([usernamePassword(credentialsId: "${params.gitlabCredential}", passwordVariable: 'password', usernameVariable: 'username')]) {
            sh "git init"
            sh "git checkout main"
            sh "sed -i 's@version:.*@version: ${env.BUILD_NUMBER}@g' ./values.yaml"
            sh "sed -i 's@repository:.*@repository: nexus.ihp001.dev@g' ./values.yaml"
            sh "git add ."
            sh "git config --global user.email ${params.gitlabName}"
            sh "git config --global user.name ${params.gitlabEmail}"
            sh "git commit -m '[UPDATE] 5ka ${GIT_COMMIT} image versioning'"
            sh "git remote set-url origin https://${username}:${password}@${params.githelmshortddress}"
            sh "git push -f origin main"
            }
        }
    }    
